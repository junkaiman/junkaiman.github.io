<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker on keon.im</title>
    <link>https://junkaiman.github.io/tags/docker/</link>
    <description>Recent content in Docker on keon.im</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Â© {year} Keon</copyright>
    <lastBuildDate>Fri, 26 Nov 2021 12:21:47 +0800</lastBuildDate><atom:link href="https://junkaiman.github.io/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Dii Portal</title>
      <link>https://junkaiman.github.io/works/dev/dii-portal/</link>
      <pubDate>Fri, 26 Nov 2021 12:21:47 +0800</pubDate>
      
      <guid>https://junkaiman.github.io/works/dev/dii-portal/</guid>
      <description>The backstage management system of DKU innovation incubator (Dii) teams. Offers an convenient and efficient way of managing teams, projects, checking attendance, pushing notifications for both Dii applicants and administrators.
Node.js + Express.js as backend system. MongoDB as the database. The front-end webpage is written in React.js. It is now in the development with a group of four students. The prototype and UI/UX design can be found at https://www.haitonglin.com/digital-imaging/web-design</description>
    </item>
    
    <item>
      <title>AiAging.net</title>
      <link>https://junkaiman.github.io/works/dev/aiaging/</link>
      <pubDate>Sun, 17 Jan 2021 22:17:33 +0800</pubDate>
      
      <guid>https://junkaiman.github.io/works/dev/aiaging/</guid>
      <description>Demo page for the biological age prediction project led by Prof. Chenkai Wu and his team at Duke Kunshan University. The page receives user&amp;rsquo;s inputs of physiological data and returns with a predicted biological age.
The project is held under Global Health Research Center and funded by local government.
I took the responsibility of server deployment, frontend page design, and the backend system development to connect pre-trained PyCaret model with user&amp;rsquo;s input.</description>
    </item>
    
  </channel>
</rss>
